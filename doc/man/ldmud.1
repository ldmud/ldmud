.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.TH LDMUD "1" "July 2025" "LDMud 3.5.8 - a LPMud Game Driver." "User Commands"
.SH NAME
LDMud \- ldmud
.SH SYNOPSIS
.B ldmud
[\fI\,options\/\fR] [\fI\,<portnumber>\/\fR...]
.SH DESCRIPTION
LDMud 3.5.8 \- a LPMud Game Driver.
.PP
Options are:
.HP
\fB\-\-args\fR <filename>
.IP
Read the options from <filename> as if they were given on the
commandline.
.HP
\fB\-P\fR|\-\-inherit <fd\-number>
.IP
Inherit filedescriptor <fd\-number> from the parent process
as socket to listen for connections.
.HP
\fB\-u\fR|\-\-udp <portnumber>
.IP
Specify the <portnumber> for the UDP port, overriding the compiled\-in
default.
.HP
\fB\-D\fR|\-\-define <macro>[=<text>]
.IP
Add <macro> (optionally to be expanded to <text>) to the list of
predefined macros known by the LPC compiler.
.HP
\fB\-E\fR|\-\-eval\-cost <ticks>
.IP
Set the number of <ticks> available for one evaluation thread.
.HP
\fB\-M\fR|\-\-master <filename>
.IP
Use <filename> for the master object.
.HP
\fB\-m\fR|\-\-mudlib <pathname>
.IP
Use <pathname> as the top directory of the mudlib.
.HP
\fB\-\-debug\-file\fR <filename>
.IP
Log all debug output in <filename> instead of <host>.debug.log .
.HP
\fB\-\-access\-file\fR <filename>|none
.IP
Activate access control with these access permissions data.
If 'none' is given access control is deactivated.
.HP
\fB\-\-access\-log\fR <filename>|none
.IP
Log valid and rejected connections into this file.
If 'none' is given no log is written.
.HP
\fB\-\-hostname\fR <name>
.IP
Use <name> as hostname, instead of what the system says.
.HP
\fB\-\-hostaddr\fR <addr>
.IP
Use <addr> as address of this machine, instead of what the
system says. In particular this address will be used to open
the driver ports.
.HP
\fB\-\-compat\fR
.HP
\fB\-\-no\-compat\fR
.IP
Select the mode (compat or plain) of the driver.
Note that this choice does not affect the default name of the master
object.
.HP
\fB\-d\fR|\-\-debug
.IP
Generate debug output; repeat the argument for even more output.
.HP
\fB\-c\fR|\-\-list\-compiles
.IP
List the name of every compiled file on stderr.
.HP
\fB\-e\fR|\-\-no\-preload
.IP
Pass a non\-zero argument (the number of occurrences of this option)
to master\->preload(), which usually inhibits all preloads of castles
and other objects.
.HP
\fB\-\-erq\fR <filename>
.HP
\fB\-\-erq\fR "<filename> <erq arguments>"
.IP
Use <filename> instead of 'erq' as the name of the ERQ executable.
If the name starts with a '/', it is take to be an absolute pathname,
otherwise it is interpreted relative to the executable directory.
If not specified, 'erq' is used as executable name.
With the proper use of quotes it is legal to pass arbitrary arguments
to the erq, however, these may not contain spaces themselves.
.HP
\fB\-N\fR|\-\-no\-erq
.IP
Don't start the erq demon (if it would be started at all).
.HP
\fB\-\-alarm\-time\fR <time>
.IP
The granularity of call_out()s and heartbeats (minimum: 1).
.HP
\fB\-\-heart\-beat\-interval\fR <time>
.IP
The time to elapse between two heartbeats (minimum: 1).
.HP
\fB\-\-synchronous\-heart\-beat\fR
.IP
All heartbeats are executed at the same time (modulo granularity).
.HP
\fB\-\-asynchronous\-hear\-beatt\fR
.IP
Heartbeats are executed immediately when they are due (modulo granularity).
.HP
\fB\-t\fR|\-\-no\-timers
.IP
Disable heartbeats and call_outs.
.HP
\fB\-f\fR|\-\-funcall <word>
.IP
The lfun master\->flag() is called with <word> as argument before the
gamedriver accepts network connections.
.HP
\fB\-\-cleanup\-time\fR <time>
.IP
The idle time in seconds for an object before the driver tries to
clean it up. This time should be substantially higher than the
reset time. A time <= 0 disables the cleanup mechanism.
.HP
\fB\-\-reset\-time\fR <time>
.IP
The time in seconds for an object before it is reset.
A time <= 0 disables the reset mechanism.
.HP
\fB\-\-regexp\fR pcre|traditional
.IP
Select the default regexp package.
.HP
\fB\-\-max\-array\fR <size>
.IP
The maximum number of elements an array can hold.
Set to 0, arrays of any size are allowed.
.HP
\fB\-\-max\-callouts\fR <number>
.IP
The maximum number of callouts at one time.
Set to 0, any number of callouts is allowed.
.HP
\fB\-\-max\-mapping\fR <size>
.IP
The maximum number of elements (keys+values) a mapping can hold.
Set to 0, mappings of any size are allowed.
.HP
\fB\-\-max\-mapping\-keys\fR <size>
.IP
The maximum number of entries (keys) a mapping can hold.
Set to 0, mappings of any size are allowed.
.HP
\fB\-\-max\-bytes\fR <size>
.IP
The maximum number of bytes one read_bytes()/write_bytes() call
can handle.
Set to 0, reads and writes of any size are allowed.
.HP
\fB\-\-max\-file\fR <size>
.IP
The maximum number of bytes one read_file()/write_file() call
can handle.
Set to 0, reads and writes of any size are allowed.
.HP
\fB\-\-max\-write\-buffer\fR <size>
.IP
The maximum number of bytes to be kept pending for each socket
to write.
Set to 0, an unlimited amount of data can be kept pending.
.TP
\fB\-s\fR <time> | \fB\-\-swap\-time\fR <time>
.HP
\fB\-s\fR v<time> | \fB\-\-swap\-variables\fR <time>
.IP
Time in seconds before an object (or its variables) are swapped out.
A time less or equal 0 disables swapping.
.HP
\fB\-s\fR f<name> | \fB\-\-swap\-file\fR <name>
.IP
Swap into file <name> instead of LP_SWAP.<host> .
.HP
\fB\-s\fR c | \fB\-\-swap\-compact\fR
.IP
Reuse free space in the swap file immediately.
.HP
\fB\-\-hard\-malloc\-limit\fR <size>
.IP
Restrict total memory allocation to <size> bytes. A <size> of 0
or 'unlimited' removes any restriction.
.HP
\fB\-\-soft\-malloc\-limit\fR <size>
.IP
If total memory allocation exceeds <size> bytes, inform the mudlib
master about a developing low memory situation. A <size> of 0
or 'unlimited' removes the threshold. <size> must be smaller than
\fB\-\-hard\-malloc\-limit\fR.
.HP
\fB\-\-min\-malloc\fR <size>
.HP
\fB\-\-min\-small\-malloc\fR <size>
.IP
Determine the sizes for the explicit initial large resp. small chunk
allocation. A size of 0 disables the explicit initial allocations.
.HP
\fB\-r\fR u<size> | \fB\-\-reserve\-user\fR <size>
.HP
\fB\-r\fR m<size> | \fB\-\-reserve\-master\fR <size>
.HP
\fB\-r\fR s<size> | \fB\-\-reserve\-system\fR <size>
.IP
Reserve <size> amount of memory for user/master/system allocations to
be held until main memory runs out.
.HP
\fB\-\-filename\-spaces\fR
.HP
\fB\-\-no\-filename\-spaces\fR
.IP
Allow/disallow the use of spaces in filenames.
.HP
\fB\-\-strict\-euids\fR
.HP
\fB\-\-no\-strict\-euids\fR
.IP
Enforce/don't enforce the proper use of euids.
.HP
\fB\-\-share\-variables\fR
.HP
\fB\-\-init\-variables\fR
.IP
Select how clones initialize their variables:
.IP
\- by sharing the current values of their blueprint
.br
\- by initializing them afresh (using __INIT()).
.HP
\fB\-\-tls\-key\fR <pathname>|none
.IP
Use <pathname> as the x509 keyfile, default is 'none'.
If relative, <pathname> is interpreted relative to <mudlib>.
If 'none' is given and no key directory is specified TLS is deactivated.
.HP
\fB\-\-tls\-keydirectory\fR <pathname>|none
.IP
Use <pathname> as the directory where PEM coded files containing
the private key and corresponding x509 certificate reside,
default is 'none'.
If relative, <pathname> is interpreted relative to <mudlib>.
If 'none' is given and no key file is specified TLS is deactivated.
.HP
\fB\-\-tls\-cert\fR <pathname>
.IP
Use <pathname> as the x509 certfile, default is 'cert.pem'.
If relative, <pathname> is interpreted relative to <mudlib>.
.HP
\fB\-\-tls\-trustfile\fR <pathname>|none
.IP
Use <pathname> as the filename holding your trusted PEM certificates,
.IP
default is 'none'.
.IP
If relative, <pathname> is interpreted relative to <mudlib>.
.HP
\fB\-\-tls\-trustdirectory\fR <pathname>|none
.IP
Use <pathname> as the directory where your trusted PEM certificates reside,
.IP
default is 'none'.
.IP
If relative, <pathname> is interpreted relative to <mudlib>.
.HP
\fB\-\-tls\-crlfile\fR <pathname>|none
.IP
Use <pathname> as the filename holding your certificate revocation lists,
.IP
default is 'none'.
.IP
If relative, <pathname> is interpreted relative to <mudlib>.
.HP
\fB\-\-tls\-crldirectory\fR <pathname>|none
.IP
Use <pathname> as the directory where your certificate revocation lists reside,
.IP
default is 'none'.
.IP
If relative, <pathname> is interpreted relative to <mudlib>.
.HP
\fB\-\-python\-script\fR <pathname>
.IP
Execute the python script <pathname> on startup, default is 'startup.py'.
If relative, <pathname> is interpreted relative to <mudlib>.
.HP
\fB\-\-wizlist\-file\fR <filename>
.HP
\fB\-\-no\-wizlist\-file\fR
.IP
Read and save the wizlist in the named file (always interpreted
relative the mudlib); resp. don't read or save the wizlist.
.HP
\fB\-\-pidfile\fR <filename>
.IP
Write the pid of the driver process into <filename>.
.HP
\fB\-\-randomdevice\fR <filename>
.IP
Determines the source of the seed for the random number generator.
(tries \fI\,/dev/urandom\/\fP by default and uses system clock as fallback)
.HP
\fB\-\-random\-seed\fR <num>
.IP
Seed value for the random number generator. If not given, the
driver chooses a seed value on its own.
.HP
\fB\-\-gcollect\-outfd\fR <filename>|<num>
.IP
Garbage collector output (like a log of all reclaimed memory blocks)
is sent to <filename> (or inherited fd <num>) instead of stderr.
.HP
\fB\-\-check\-refcounts\fR
.IP
Every backend cycle, all refcounts in the system are checked.
SLOW!
.HP
\fB\-\-check\-state\fR <lvl>
.IP
Perform a regular simplistic check of the virtual machine according
to <lvl>:
.IP
= 0: no check
.br
= 1: once per backend loop
.br
= 2: at various points in the backend loop
.HP
\fB\-\-gobble\-descriptors\fR <num>
.IP
<num> (more) filedescriptors are used up. You'll know when you need it.
.HP
\fB\-\-options\fR
.IP
Print the version and compilation options of the driver, then exit.
.HP
\fB\-V\fR|\-\-version
.IP
Print the version of the driver, then exit.
.HP
\fB\-\-longhelp\fR
.IP
Display this help and exit.
.HP
\fB\-h\fR|\-?|\-\-help
.IP
Display the short help text and exit.
.SH AUTHOR
Maintained by the LDMud team (ldmud-dev@unitopia.de).
.SH "REPORTING BUGS"
Bug reports and feature suggestions are tracked online at
https://mantis.ldmud.eu/mantis/.
.SH COPYRIGHT
Copyright 1997-2007 by Lars Düning.
.br
Copyright 2008-2025 by Bertram Felgenhauer, Alexander Motzkau and Dominik Schäfer.

LDMud is based on LPmud, which is
.br
Copyright 1989-1991 by Lars Pensjö, and, starting with version 3.1.2,
.br
Copyright 1991-1997 by Jörn Rennecke.

Source code herein refers to the source code, and any executables
created from the same source code.

All rights reserved.  Permission is granted to use, extend and modify the
source code provided subject to the restriction that the source code may
not be used in any way whatsoever for monetary gain.

LDMud contains additional code which are copyright by their respective
authors - see the files COPYRIGHT and CREDITS for details.
